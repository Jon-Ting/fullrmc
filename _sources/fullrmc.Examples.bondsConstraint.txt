:orphan:

.. role:: underline
   :class: underline
   
   
Relative path
=============
../fullrmc/Examples/bondsConstraint/


Description
===========
A water molecule is used to demonstrate how a bond constraint can be used to constraint
bonds. This example was used to generate the `bond constraint video example 
<https://youtu.be/GxmJae9h78E>`_ as seen in the online documentation.  When running this 
example a trajectory file will be generated. If 
`VMD <http://www.ks.uiuc.edu/Research/vmd/>`_. is installed, the trajectory
of all moves will be automatically visualized. 


Files
=====

#. system.pdb: The water molecule pdb file
#. run.py: The script file used to run the simulation


run.py explained
================

:underline:`IMPORTING USEFUL DEFINITIONS:` 

All useful packages, modules and definitions are imported.


:underline:`SHUT DOWN LOGGING:` 

Set logger minimum level to maximum possible integer value. This will mute
all non-error logging. 


:underline:`CREATE ENGINE:` 

Create the engine and the needed bonds and bond-angles constraints. 


:underline:`DIFFERENT RUNS:` 

Define functions to run fitting engine. All of the following functions finish 
running the engine using Engine.run method. A trajectory of all moves is saved
to the disk by setting XYZPath argument not to None.

#. run_normal: Constraint O-H1 and O-H2 bonds to be between :math:`0.8\AA` 
   and :math:`1.1\AA`
#. run_distort_1: Constraint O-H1 to be between :math:`0.2\AA` and :math:`0.5\AA`
   and O-H2 to be between :math:`2.2\AA` and :math:`2.5\AA`
#. run_distort_2: Constraint O-H1 to be between :math:`2.2\AA` and :math:`2.5\AA`
   and O-H2 to be between :math:`0.2\AA` and :math:`0.5\AA`


:underline:`RUN SIMULATION:` 

Run in order all of 'run_normal', 'run_distort_1', 'run_distort_2' and finally 
'run_normal' again.


:underline:`VISUALIZE SIMULATION:` 

Reset initial pdb to engine instance. Visualize engine along with the saved trajectory
"trajectory.xyz".



