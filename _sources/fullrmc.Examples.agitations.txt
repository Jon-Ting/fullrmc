.. role:: underline
   :class: underline
   
Relative path
=============
../fullrmc/Examples/agitations/

Description
===========
A box of water molecules is used to demonstrate how to use agitation move 
generators. This example was used to generate the `agitation video example 
<https://youtu.be/qTJux9kZCOo?list=PLdnpUo5ObkNbe4ZPe9ndormg2qUFbOmco>`_ 
as seen in the online documentation. When running this example several files
will be generated where all moved are saved. If 
`VMD <http://www.ks.uiuc.edu/Research/vmd/>`_. is installed, the trajectory
of all moves will be automatically visualized. 

Files
=====
#. createWaterBox.py: The script used to create a box of :math:`10 \AA^{3}` in size
#. waterBox.pdb: The water box system
#. run.py: The script file used to run the simulation

run.py explained
================

:underline:`IMPORTING USEFUL DEFINITIONS:` 

All useful packages, modules and definitions are imported.


:underline:`SHUT DOWN LOGGING:` 

Set logger minimum level to maximum possible integer value. This will mute
all non-error logging. 


:underline:`CREATE ENGINE:` 

Create the engine and the needed bonds and bond-angles constraints. 


:underline:`DIFFERENT RUNS:` 

Define functions to run fitting engine. All of the following functions finish 
running the engine using Engine.run method. A trajectory of all moves is saved
to the disk by setting XYZPath argument not to None.
   #. agitate_bonds: Groups are created by O-H pair of atoms using their indexes.
      :class:`.DistanceAgitationGenerator` is assigned to each group. A
      :class:`.DefinedOrderSelector` is used to make sure selecting every group.
      Number of engine steps is set to 250 * number of groups so each O-H group 
      will be agitated 250 times.
   #. agitate_angles: Groups are created by O-H-H triplets of atoms using
      engine set_groups_as_molecules method. :class:`.AngleAgitationGenerator` 
      is assigned to each group. A :class:`.DefinedOrderSelector` is used to make 
      sure selecting every group. Number of engine steps is set to 250 * number 
      of groups so each O-H-H group will be agitated 250 times.
   #. agitate_both: Groups are created by O-H-H triplets of atoms using
      engine set_groups_as_molecules method, then groups of O-H pair of 
      atoms are also created and added to the engine. 
      :class:`.AngleAgitationGenerator` is assigned to each group. 
      A :class:`.DefinedOrderSelector` is used to make sure selecting every group. 
      Number of engine steps is set to 250 * number of groups so each 
      O-H-H and O-H group will be agitated 250 times.


:underline:`RUN SIMULATION:` 

All three functions are called consecutively.


:underline:`VISUALIZE SIMULATION:` 

Reset initial pdb to engine instance. Visualize engine along with all saved 
four trajectories "along0.xyz", "along1.xyz", "along2.xyz", "random.xyz".



